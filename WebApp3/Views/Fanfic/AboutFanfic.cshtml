@using Microsoft.EntityFrameworkCore.Internal
@model WebApp3.ViewModels.FanficTagViewModel

@{
    ViewData["Title"] = "О фанфике";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




    <div class="container" id="lik2">
        <div class="user col-sm-12">
            <img src="~/images/@Model.ApplicationUser.ImageUrl" class="rounded-circle" width="50" height="50" asp-append-version="true" />
            <div class="name-user-inHeader">
                <h6>@Model.ApplicationUser.Email</h6>
                <small style="color: silver">Автор</small>
            </div>
            <div class="dropdown col-sm-6" style="text-align: right;">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: transparent;">
                    <i class="fa fa-bars" aria-hidden="true"></i>
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    @if (Model.ApplicationUser.Email == User.Identity.Name)
                    {
                        <a class="dropdown-item" asp-controller="Chapter" asp-action="Create" asp-route-id="@Model.FanficId">Создать главу</a>
                        <a class="dropdown-item" asp-controller="Chapter" asp-action="Index" asp-route-id="@Model.FanficId">Содержание</a>
                        <a class="dropdown-item" data-toggle="modal" onclick="showInPopup('@Url.Action("Edit", "Fanfic", new {id = Model.FanficId}, Context.Request.Scheme)', 'Редактировать содержимое фанфика')">Редактировать</a>
                        <a class="dropdown-item" data-toggle="modal" onclick="showInPopup('@Url.Action("Delete", "Fanfic", new {id = Model.FanficId}, Context.Request.Scheme)', 'Подтвердите удаление фанфика')">Удалить</a>
                    }
                    @if (Model.ApplicationUser.Email != User.Identity.Name)
                    {
                        <a class="dropdown-item" asp-controller="Chapter" asp-action="Index" asp-route-id="@Model.FanficId">Содержание</a>
                    }
                </div>
            </div>
        </div>
        <h1>@Html.DisplayFor(model => model.NameFanfic)</h1>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                <b>Название:</b>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NameFanfic)
            </dd>
            <dt class="col-sm-2">
                <b>Описание:</b>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dd class="col-sm-2">
                <b>Метки</b>
            </dd>
            <dt class="col-sm-10">
                @foreach (var fanfic in Model.FanficsTags)
                {
                    <a class="dataFanfic tags-list" data-toggle="tooltip" data-placement="top" title="@fanfic.Tag.TagDescription" asp-action="FanficList" asp-route-idTag="@fanfic.TagId">
                        @fanfic.Tag.TagTitle
                    </a>
                }

            </dt>
        </dl>
        <div class="row">
            <div class="col likes">
                @foreach (var fanfic in Model.FanficsTags.Distinct((fanfic, fanficTag) => fanfic.FanficId == fanficTag.FanficId))
                {
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <div class="likes">
                            <button onclick="showInPopup('@Url.Action("Login", "Home", null, Context.Request.Scheme)', 'Авторизация')" id="lik" class="btn btn-sm btn-danger d-none d-md-inline-block" style="background-color: transparent; border: 0;" type="submit"><i class="fa fa-thumbs-up" aria-hidden="true"><b style="color: yellowgreen"> @fanfic.Fanfic.Likes.Count() </b></i></button>
                        </div>
                    }

                    @if (User.Identity.IsAuthenticated)
                    {
                        <form asp-action="AboutFanfic" asp-route-id="@fanfic.FanficId" onsubmit="return addLike(this)">
                            <div class="likes">
                                <button id="lik" class="btn btn-sm btn-danger d-none d-md-inline-block" style="background-color: transparent; border: 0;" type="submit"><i class="fa fa-thumbs-up" aria-hidden="true"><b style="color: yellowgreen"> @fanfic.Fanfic.Likes.Count() </b></i></button>
                            </div>
                        </form>
                    }
                }
            </div>
        </div>

        <div id="allComments" class="container bodyComment">
            @foreach (var comment in Model.Comments)
            {
                <div class="all-comments" id="commentsCont">
                    <div class="comme">
                        <article class="comments-container" id="messageContent">
                            <div class="comments-avatar" id="avatar">
                                <div class="avatar-decoration-holder">
                                    <div class="img-holder-universal avatar-100">
                                        <a asp-controller="Home" asp-action="MyInformation" asp-route-id="@comment.ApplicationUsers.Id">
                                            <img src="~/images/@comment.ApplicationUsers.ImageUrl" class="rounded-circle" asp-append-version="true" width="100" height="100" />
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="comment-content">
                                <header class="head comment-header">
                                    <div class="author">
                                        <a asp-controller="Home" asp-action="MyInformation" asp-route-id="@comment.ApplicationUsers.Id" class="comment_author">@comment.ApplicationUsers.Email</a>
                                    </div>
                                    <div class="datepublish">
                                        <i class="fa fa-calendar fa-lg" aria-hidden="true"></i>
                                        <time> @comment.DateTimePublish</time>
                                    </div>
                                    @if (comment.ApplicationUsers.Email == User.Identity.Name)
                                    {
                                        <div class="dropdown">
                                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: transparent;">
                                                <i class="fa fa-bars" aria-hidden="true"></i>
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <a asp-action="DeleteComment" class="dropdown-item" data-toggle="modal" onclick="showInPopup('@Url.Action("DeleteComment", "Fanfic", new {commentId = @comment.CommentId}, Context.Request.Scheme)', 'Подтвердите удаление комментария')">Удалить</a>
                                            </div>
                                        </div>
                                    }
                                </header>
                                <div class="article-content comment_text" id="commentContent">
                                    <div class="comment-body">
                                        <div class="comment_message urlize comment-smiles">
                                            @comment.CommentContent
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </article>
                    </div>
                </div>
            }
            @if (Model.PaginationPageViewModel.TotalPage != 0)
            {

            <nav aria-label="Page navigation example">
                <form asp-action="AboutFanfic" method="get"  asp-route-id="@Model.FanficId">
                    <div class="page-number">
                        <div>
                            <input type="number" name="page" class="form-control" value="@Model.PaginationPageViewModel.NumberPage" min="1" max="@Model.PaginationPageViewModel.TotalPage" />
                        </div>
                        <div class="number-last">
                            <b>из @Model.PaginationPageViewModel.TotalPage</b>
                        </div>
                        <div>
                            <button type="submit" class="btn btn-outline-secondary btn-sm">Перейти</button>
                        </div>
                    </div>
                </form>

                <ul class="pagination justify-content-center">
                    @if (Model.PaginationPageViewModel.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="AboutFanfic"asp-route-id="@Model.FanficId" asp-route-page="@(Model.PaginationPageViewModel.NumberPage - 1)" tabindex="-1">&lt; Назад</a>
                        </li>
                    }

                    @if (Model.PaginationPageViewModel.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="AboutFanfic" asp-route-id="@Model.FanficId" asp-route-page="@(Model.PaginationPageViewModel.NumberPage + 1)">Далее &gt;</a>
                        </li>
                    }
                </ul>
            </nav>
            }
            <hr />

            <div class="add-comment-container" id="comments-container">
                <div class="row">
                    <div class="col-md-12">
                        <form asp-action="AboutFanfic" onsubmit="return addComment(this)">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <textarea asp-for="CommentContent" id="comment-content" class="form-control" placeholder="Оставьте комментарий..."></textarea>
                                <span asp-validation-for="CommentContent" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                @if (@User.Identity.IsAuthenticated == true)
                                {
                                    <input id="sendBtn" type="submit" value="Отправить" class="btn btn-danger btn-send" />
                                }
                                @if (@User.Identity.IsAuthenticated == false)
                                {
                                    <input type="submit" disabled="disabled" value="Отправить" class="btn btn-danger btn-send" />
                                }
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
@*<script src="~/js/microsoft/signalr/dist/browser/signalr.min.js"></script>*@
<script>
    addComment = form => {
        try {
            $.ajax({
                url: form.action,
                type: 'POST',
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function(result) {
                   
                        $.get(null,
                            function(data) {
                                $('body').html(data);
                            });
                    


                }
            });
            return false;
        } catch (ex) {
            throw ex;
        }
    }
     @*function callSignalRCommentEvent() {

        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        hubConnection.on("Send",
            function (user, message, dateTimePublishComment) {
                let elem = document.getElementById("commentsCont");
                elem.innerHTML += `  <div class="comme" style="padding-top: 10px;">
                                <article class="comments-container" id="messageContent">
                                    <div class="comments-avatar" id="avatar">
                                        <div class="avatar-decoration-holder">
                                            <div class="img-holder-universal avatar-100">
                                                <a asp-controller="Home" asp-action="MyInformation" asp-route-id="@Model.ApplicationUser.Id">
                                                    <img src="images/standart.jpg" class="rounded-circle" asp-append-version="true" width="100" height="100" />
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="comment-content">
                                        <header class="head comment-header">
                                            <div class="author">
                                                <a class="nameUserComment" asp-controller="Home" asp-action="MyInformation" asp-route-id="@Model.ApplicationUser.Id" class="comment_author">
                                                ${user}
                                                </a>
                                            </div>
                                            <div class="datepublish">
                                                <i class="fa fa-calendar fa-lg" aria-hidden="true"></i>
                                                <time>
                                                ${dateTimePublishComment}
                                                </time>
                                            </div>
                                        </header>
                                        <div class="article-content comment_text" id="commentContent">
                                            <div class="comment-body">
                                                <div class="comment_message urlize comment-smiles">
                                                ${message}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </article>
                            </div>
        `;

                console.log(user + " " + message + " " + dateTimePublishComment);
            });

        document.getElementById("sendBtn").addEventListener("click",
            function (e) {
                let user = "@(User.Identity.Name)";
                let message = document.getElementById("comment-content").value;
                let a = 2;
                let dateTimePublishCommentToString = new Date();
                let dd = dateTimePublishCommentToString.getDate().toString();
                let mm = dateTimePublishCommentToString.getMonth() + 1;
                let yyyy = dateTimePublishCommentToString.getFullYear().toString();
                let hh = dateTimePublishCommentToString.getHours().toString();
                let minute = dateTimePublishCommentToString.getMinutes().toString();
                let ss = dateTimePublishCommentToString.getSeconds().toString();
                if (dd < 10) dd = '0' + dd;
                if (mm < 10) mm = '0' + mm;
                if (hh < 10) hh = '0' + hh;
                if (minute < 10) minute = '0' + minute;
                if (ss < 10) ss = '0' + ss;
                let dateTimePublishComment = dd + '.' + mm + '.' + yyyy + ' ' + hh + ':' + minute + ':' + ss;

                hubConnection.invoke("Send", user, message, dateTimePublishComment);
            });

        hubConnection.start();
    }*@ 

</script>

<style>
    body {
        color: white;
    }
    input.btn-send{
        float: right;
        inline-size: min-content;
    }
    .page-link{
        margin-left: 15px !important;
    }
    div.page-number{
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px;
    }
    div.number-last{
        margin-left: 10px;
        margin-right: 10px;
    }
    a.dataFanfic {
          font-family: Century gothic, sans-serif;

          color: white;
      }

    a.dataFanfic:hover {
        color: rgb(220, 226, 231);
    }
      .tags-list {
        background-color: slategray;
        padding: 5px;
          margin-left: 10px;
    }
    div.name-user-inHeader{
        margin-left: 3%;
    }
    div.user{
        display: inline-flex;
    }
    div.deleteComment{

    }
    hr {
        border-color: white;
    }

    div .likes i {
        color: yellowgreen;
        font-size: 28px;
    }

    div .center1 {
        font-size: 21px;
        padding: 10px;
        display: inline-grid;
        text-align: center
    }

    div .container {
        color: white;
    }

    

    .blog-area time {
        color: #000;
        margin: 7px 5px 0 0;
        font-size: 11px;
        line-height: 1.25
    }

    div .comme {
        border: 1px solid;
        padding-bottom: 10px;
        border-radius: 15px;
    }

    div .add-comment-container {
        padding-top: 20px;
    }

    div .datepublish {
        margin-left: 10px;
        font-size: small;
    }

    div .quoted {
        padding: 0 5px 5px 10px;
        margin: 0 10px;
        color: #7f7f7f;
        font-style: italic;
        background: #ececec;
        line-height: 18px;
    }

    .avatar-decoration-holder {
        display: inline-block;
    }

    header.head.comment-header {
        margin-left: 10px;
        display: inline-flex;
    }

    .comments-container {
        display: inline-flex;
        width: 100%;
        margin-top: 20px;
        margin-bottom: 20px;
        position: relative;
    }
    .comment-container .comment-content .head {
        padding: 0;
        margin-bottom: 8px;
    }

    div #commentsId {
        margin-top: 20px;
        background-color: #231954;
        padding: 5px;
    }

    div .all-comments {
        margin: 10px;
        color: white;
    }

    .avatar-100 {
        margin: 15px;
    }

    .img-holder-universal .img {
        margin: auto;
        width: 100%;
    }

    .button {
        border-radius: 12px;
        background-color: #6ed772;
        transition-duration: 0.4s;
    }

        .button:hover {
            background-color: #4CAF50; /* Green */
            color: white;
        }
</style>

